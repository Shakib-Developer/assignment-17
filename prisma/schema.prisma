// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  email             String             @unique @db.VarChar(50)
  mobile            String             @db.VarChar(50)
  password          String             @db.VarChar(50)
  otp               String             @db.VarChar(10)
  created_at        DateTime           @default(now()) @db.Timestamp(0)
  updated_at        DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  customers customers?
  products products[]
  categories categories[]
  invoice_products  invoice_products[]
  invoices          invoices[]
}

model customers {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @db.VarChar(100)
  email           String            @db.VarChar(100)
  mobile          String            @db.VarChar(100)
  user_id         BigInt            @unique @db.UnsignedBigInt
  created_at      DateTime          @default(now()) @db.Timestamp(0)
  updated_at      DateTime          @default(now()) @db.Timestamp(0) @updatedAt
  users           users             @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoices          invoices[]
}

model categories {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name       String     @db.VarChar(100)
  user_id    BigInt     @unique @db.UnsignedBigInt
  created_at DateTime   @default(now()) @db.Timestamp(0)
  updated_at DateTime   @default(now()) @db.Timestamp(0) @updatedAt
  users      users              @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products   products[]
}

model products {
  id               BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name             String             @db.VarChar(200)
  price            String             @db.VarChar(50)
  unit             String             @db.VarChar(50)
  img_url          String             @db.VarChar(200)
  category_id      BigInt             @unique @db.UnsignedBigInt
  user_id          BigInt             @unique @db.UnsignedBigInt
  created_at       DateTime           @default(now()) @db.Timestamp(0)
  updated_at       DateTime           @default(now()) @db.Timestamp(0) @updatedAt
  invoice_products invoice_products[]
  users            users              @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  categories       categories         @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}

model invoices {
  id               BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  total            String                   @db.VarChar(50)
  vat              String                   @db.VarChar(50)
  payable          String                   @db.VarChar(50)
  discount         String                   @db.VarChar(50)
  user_id          BigInt                   @unique @db.UnsignedBigInt
  customer_id      BigInt                   @unique @db.UnsignedBigInt
  created_at       DateTime                 @default(now()) @db.Timestamp(0)
  updated_at       DateTime                 @default(now()) @db.Timestamp(0) @updatedAt
  users            users                    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  customers        customers                @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  invoice_products invoice_products[]
}

model invoice_products {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt   @unique @db.UnsignedBigInt
  product_id BigInt   @unique @db.UnsignedBigInt
  user_id    BigInt   @unique @db.UnsignedBigInt
  qty        String   @db.VarChar(50)
  sale_price String   @db.VarChar(50)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0) @updatedAt
  invoices   invoices @relation(fields: [invoice_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  products   products @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
  users      users    @relation(fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Cascade)
}
